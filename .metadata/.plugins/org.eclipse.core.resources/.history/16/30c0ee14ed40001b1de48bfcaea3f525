/**
 * Body.java - a model for the thorax and abdomen body parts of a spider.
 */


import javax.media.opengl.GL2;

import com.jogamp.opengl.util.gl2.GLUT;//for new version of gl

/**
 * Name: Jeffrey Li
 * Class: CS 480
 * Programming assignment 2
 * Due date: October 13, 2020
 * Assignment objective: Develop a program that allows the user to control a simulated insect, scorpion, or spider.
 * Requirements:
 * 		1. Use OpenGL to construct a 3D insect, spider, or scorpion model from cylinders and/or ellipsoids.
 * 		2. Write code that enables the user to change the angles at each joint in the creature's body model
 * 		   via the keyboard interface that you define. Limit the angles at each joint within reasonable
 * 		   ranges so that creature's legs, neck, head and any other parts don't intersect or bend in unnatural
 * 		   ways! The orientation of joint rotations for the left and right limbs should mirror each other.
 * 		3. Create 5 (five) different poses of the creature that you defined. Add a keyboard input 'T' to cycle
 * 		   through the poses. 
 * 
 * Notes: This package contains the modified skeleton code of @author Jeffrey Finkelstein's 3D hand model simulation
 * in order to create a 3D spider model, capable of spider-like joint rotations and poses.
 */

/**
 * A model for the main body parts of a spider as a sphere scaled in one direction.
 * This class is a modified form of @author Jeffrey Finkelstein's Palm class.
 */
public class Body extends Circular implements Displayable {

  /**
   * The OpenGL handle to the display list which contains all the components
   * which comprise this cylinder.
   */
  private int callListHandle;

  /**
   * Instantiates this object with the specified radius and OpenGL utility
   * toolkit object for drawing the sphere.
   * 
   * @param radius
   *          The radius of this object.
   * @param glut
   *          The OpenGL utility toolkit object for drawing the sphere.
   */
  public Body(final double radius, final GLUT glut) {
    super(radius, glut);
  }

  /**
   * {@inheritDoc}
   * 
   * @param gl
   *          {@inheritDoc}
   * @see edu.bu.cs.cs480.Displayable#draw(javax.media.opengl.GL)
   */
  @Override
  public void draw(GL2 gl) {
    gl.glCallList(this.callListHandle);
  }

  /**
   * Defines the OpenGL call list which draws a scaled sphere.
   * 
   * @param gl
   *          {@inheritDoc}
   * 
   * @see edu.bu.cs.cs480.Displayable#initialize(javax.media.opengl.GL)
   */
  @Override
  public void initialize(final GL2 gl) {
    this.callListHandle = gl.glGenLists(1);

    // create an ellipsoid for the thorax and abdomen by scaling a sphere
    gl.glNewList(this.callListHandle, GL2.GL_COMPILE);
    gl.glPushMatrix();
    // position this so that the sphere is drawn above the x-y plane, not at
    // the origin
    gl.glTranslated(0, 0, this.radius());
    gl.glScalef(1, 0.6f, 1.05f);
    this.glut().glutSolidSphere(this.radius(), 36, 18);
    gl.glPopMatrix();
    gl.glEndList();
  }

}
